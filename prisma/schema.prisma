generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_DIRECT")
}

model Event {
  id        String @id @default(uuid())
  createdBy String //User id (from clerk)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String @unique
  location    String
  description String

  event     ItemType @relation(fields: [eventType], references: [name]) //relates event to the item type being repaired there
  eventType String

  disclaimer String @default("This is not the default disclaimer")

  startDate DateTime
  endDate   DateTime

  status EventStatus @default(UPCOMING)

  repairRequests RepairRequest[] //relation field, not a column (one event to many repairRequests)
  images         EventImage[]
  eventRepairer  EventRepairer[]
}

enum EventStatus {
  UPCOMING
  ONGOING
  COMPLETED
}

enum RepairStatus {
  PENDING
  ACCEPTED
  REJECTED
  CANCELLED
  REPAIRED
  FAILED
}

enum UserRole {
  ADMIN
  EVENT_MANAGER
  REPAIRER
}

model RepairRequest {
  id         Int    @id @default(autoincrement())
  createdBy  String //User id
  assignedTo String @default("") //volugit adnteer id

  event   Event  @relation(fields: [eventId], references: [id]) //relation field (many repair_requests to one event)
  eventId String

  status         RepairStatus @default(PENDING)
  description    String
  comment        String       @default("") //comment for client
  thumbnailImage String? //s3 key to compressed image of object

  repairComment String  @default("") //comment for volunteer to document process
  spareParts    String  @default("") //this should be filled out later by volunteer
  hoursWorked   Decimal @default(0.00) @db.Decimal(10, 2)

  requestDate DateTime @default(now())
  updatedAt   DateTime @updatedAt
  item        ItemType @relation(fields: [itemType], references: [name]) //relation field
  itemType    String

  itemBrand    String
  itemMaterial String @default("") //this should be filled out later by volunteer

  images RepairRequestImage[]
}

model ItemType {
  name           String          @id
  repairRequests RepairRequest[]
  events         Event[]
}

model Brand {
  name String @id
}

model RepairRequestImage {
  id    String @id @default(uuid())
  s3Key String //Potentially to be changed for privacy reasons

  repairRequest   RepairRequest @relation(fields: [repairRequestId], references: [id])
  repairRequestId Int
}

model EventImage {
  id    String @id @default(uuid())
  s3Key String //Potentially to be changed for privacy reasons

  repairEvent   Event  @relation(fields: [repairEventId], references: [id])
  repairEventId String
}

model EventRepairer {
  id      String @id @default(uuid())
  userId  String
  eventId String
  Event   Event  @relation(fields: [eventId], references: [id])

  @@unique([userId, eventId])
}



model Staff {
  id             String       @id @default(uuid())
  clerkId        String
  role           UserRole
  organisationId String
}
