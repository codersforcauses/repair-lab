generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_DIRECT")
}

model Event {
  id        String @id @default(uuid())
  createdBy String //User id (from clerk)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String   @unique
  location    String
  description String
  volunteers  String[]

  event     ItemType @relation(fields: [eventType], references: [name]) //relates event to the item type being repaired there
  eventType String

  disclaimer String @default("This is not the default disclaimer")

  startDate DateTime
  endDate   DateTime

  status EventStatus @default(UPCOMING)

  repairRequests RepairRequest[] //relation field, not a column (one event to many repairRequests)
  images         EventImage[]
}

enum EventStatus {
  UPCOMING
  ONGOING
  COMPLETED
}

enum Status {
  PENDING
  ACCEPTED
  REJECTED
  COMPLETED
  CANCELLED
}

enum ItemStatus {
  REPAIRED
  FAILED
  UNFINISHED
}

model RepairRequest {
  id         String @id @default(uuid())
  createdBy  String //User id
  assignedTo String //volunteer id

  event   Event  @relation(fields: [eventId], references: [id]) //relation field (many repair_requests to one event)
  eventId String

  status Status @default(PENDING)
  description String
  comment     String //comment for client
  thumbnailImage String //s3 key to compressed image of object


  repairComment String //comment for volunteer to document process
  spareParts String @default("") //this should be filled out later by volunteer
  itemStatus ItemStatus @default(UNFINISHED)
  hoursWorked Numeric(10, 2) @default(0.00)


  requestDate DateTime @default(now())
  updatedAt   DateTime @updatedAt
  item        ItemType @relation(fields: [itemType], references: [name]) //relation field
  itemType    String

  itemBrand String
  itemMaterial String @default("") //this should be filled out later by volunteer

  images RepairRequestImage[]
}

model ItemType {
  name           String          @id
  repairRequests RepairRequest[]
  events         Event[]
}

model Brand {
  name String @id
}

model RepairRequestImage {
  id    String @id @default(uuid())
  s3Key String //Potentially to be changed for privacy reasons

  repairRequest   RepairRequest @relation(fields: [repairRequestId], references: [id])
  repairRequestId String
}

model EventImage {
  id    String @id @default(uuid())
  s3Key String //Potentially to be changed for privacy reasons

  repairEvent   Event  @relation(fields: [repairEventId], references: [id])
  repairEventId String
}
